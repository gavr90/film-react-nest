services:
  frontend:
    container_name: frontend
    image: ghcr.io/iamgavrfilm/film-react-nest/frontend:latest
    networks:
      - frontend-net
    volumes:
      - frontend_dist:/app/dist
    env_file:
      - frontend/.env

  backend:
    container_name: backend
    image: ghcr.io/iamgavrfilm/film-react-nest/backend:latest
    networks:
      - backend-net
    depends_on:
      - postgres
    env_file:
      - backend/.env
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:17.2-alpine3.21
    volumes:
      - ./docker-init.sql:/docker-entrypoint-initdb.d/docker-init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-net
    env_file:
      - backend/.env
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.14
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 80:80
    networks:
      - backend-net
    depends_on:
      - postgres
    env_file:
      - backend/.env
    deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: 1G
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend-net
      - backend-net
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
      - frontend_dist:/var/www/frontend:ro

  certbot:
    image: certbot/certbot:latest
    networks:
      - frontend-net
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  postgres_data:
  pgadmin_data:
  frontend_dist:

networks:
  backend-net:
  frontend-net: